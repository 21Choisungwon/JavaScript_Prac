단일값을 저장하는 방법 : 변수사용

여러개의 값을 저장하는 방법
    객체
        배열

배열 (같은 타입을 저장하자 (권장사항)) -->typescript
   let a =  ['김철수', 10, true,[1,2,4,5]]; -->배열 생성

배열 속의 요소 가져오기
    인덱스 연산자와 인덱스 번호를 사용한다.
    인덱스 번호는 0부터 시작 
    마지막 번호는 배열의 요소 갯수(배열의길이 -1)이 된다.

    let names = ['김철수','홍길동','김영희'];

    names[0] // '김철수'
    names[1] // '홍길동'
    names[2] // '김영희'

    let a = '김철수';
    a // '김철수'

배열 속 요소 수정하기
    let names = ['김철수','홍길동','김영희'];
    names[2] = '박영희';
    
    names; // '김철수' ,'홍길동', '박영희'

    let a = '김철수'
    a = '홍길동'


    let ar = [['김철수','홍길동'],['사과','바나나'],['자동차','자전거']];

    //자전거 --> 기차
    ar[2][1] = 기차;

배열의 표기
    []를 사용하면 배열 객체를 만들어 주고,
    배열 속의 요소는 각각 , 로 구분한다
    만일 배열이 길어지면 엔터를 써서 가독성을 높일 수 있다.

    마지막 요소 뒤에는 , 를 추가해줘도 가능하다. --> java,C...에서는 불가능

    let ar = [10,20,30,];   -->js에서는 가능


배열의 장점
    배열은 순서가 있다 --> 반복 가능하다 --> itreable하다   
    순서를 부여하여 사용할 수 있다.(반복문을 쉽게 쓸 수 있다.)

배열의 단점
    인덱스번호를 알고 있어야 한다.
    let scores = [10,59,40];

객체 
    저장할 때 key와 value 한 쌍으로 저장한다.
    key와 value를 property라고 하며
    함수도 저장할 수 있다.

    {}를 사용하여 객체를 생성한다
    
    key와 value는 : 으로 연결하고 
    각각의 key와 value 한쌍은 콤마로 구분한다.
    마지막 요소 뒤에는 콤마를 써도 된다.

    let scores = {kor : 10, eng : 50, math : 60};

객체 속에 들어있는 요소 접근하기
    1.하위연산자 (.을 사용한다)
        객체.키
        ex) book.title

    2.대괄호 표현법을 사용한다  
        객체['키'];
        ex) book['title']; 
            book[0];

        키 가 특수문자가 포함되어있거나 숫자 인 경우에는 하위연산자로
        접근할 수 가 없다 이때 대괄호 표현법을 사용해야만 한다.
        (Array도 객체인데 자동으로 key가 인덱스번호(숫자)로 만들어지기 떄문에
        무조건 대괄호 표기법을 따라야만 했다.)

객체 속 value 수정하기
    대입연산자 앞에 썼을 때 이미 존재하는 key 라면 value가 수정,
    존재하지 않는 key라면 새롭게 key와 value가 추가
    객체.key = 값;


구조분해 할당
    객체나 배열 속에 있는 값을 변수에다가 대입하는 행위

    1. 배열 속 여러개의 값을 각각의 변수에 대입하는 방법
        let ar =[10, 20, 30, 40, 50];
        let num1 = ar[0];
        let num2 = ar[1];
        let num3 = ar[2];
        let num4 = ar[3];
        let num5 = ar[4];
================================================================
        let ar = =[10, 20, 30, 40, 50];
        let [num1,num2,num3,num4,num5] = ar;

    2. 객체 속 여러개의 값을 각각의 변수에 대입하는 방법
        let book = {title:'안녕,page : 50 , price : 10000};
        let title - book.title;
        let page = book.page;
        let price = book.price;
================================================================
        let book = {title : '안녕', page : 50 , price : 10000};
        let {title,page,price} = book;
        객체에서 구조분해 할당을 위해서는 객체 안에 들어있는 변수이름을 사용*



원시타입
    Number
    String
    Boolean
    Symbol
    undefined
    null

참조타입
    Object
        Array
        Function
        Date
        ...

원시타입은 복사할 떄 아예 새로운 객체를 만들어 복사한다
(imutable 하다, 불변하다.)
하지만 참조타입은 복사할 때 참조 주소만 복사하고, 객체는 복사하지않는다
(얕은 복사가 발생한다 -->주소를 복사)
